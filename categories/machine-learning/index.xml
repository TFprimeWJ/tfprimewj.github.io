<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on Jinwang Blog</title>
    <link>https://tfprimewj.github.io/categories/machine-learning/</link>
    <description>Recent content in Machine Learning on Jinwang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Jan 2020 11:32:20 +0800</lastBuildDate>
    
	<atom:link href="https://tfprimewj.github.io/categories/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>经验风险最小化(ERM)和结构风险最小化(SRM)</title>
      <link>https://tfprimewj.github.io/2020/01/04/%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96erm%E5%92%8C%E7%BB%93%E6%9E%84%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96srm/</link>
      <pubDate>Sat, 04 Jan 2020 11:32:20 +0800</pubDate>
      
      <guid>https://tfprimewj.github.io/2020/01/04/%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96erm%E5%92%8C%E7%BB%93%E6%9E%84%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96srm/</guid>
      <description>经验风险最小化(ERM)和结构风险最小化(SRM) 假定我们给一个训练集，其中包含N个训练数据点：</description>
    </item>
    
    <item>
      <title>Deep Learning Course3 Week1 Programming Assignment2</title>
      <link>https://tfprimewj.github.io/2018/08/16/deep-learning-course3-week1-programming-assignment2/</link>
      <pubDate>Thu, 16 Aug 2018 11:58:06 +0200</pubDate>
      
      <guid>https://tfprimewj.github.io/2018/08/16/deep-learning-course3-week1-programming-assignment2/</guid>
      <description>Convolutional Neural Networks: Application Welcome to Course 4&amp;rsquo;s second assignment! In this notebook, you will:
 Implement helper functions that you will use when implementing a TensorFlow model Implement a fully functioning ConvNet using TensorFlow  After this assignment you will be able to:
 Build and train a ConvNet in TensorFlow for a classification problem  We assume here that you are already familiar with TensorFlow. If you are not, please refer the TensorFlow Tutorial of the third week of Course 2 (&amp;rdquo;Improving deep neural networks&amp;rdquo;).</description>
    </item>
    
    <item>
      <title>Deep Learning Course3 Week1 Programming Assignment1</title>
      <link>https://tfprimewj.github.io/2018/08/15/deep-learning-course3-week1-programming-assignment1/</link>
      <pubDate>Wed, 15 Aug 2018 11:58:06 +0200</pubDate>
      
      <guid>https://tfprimewj.github.io/2018/08/15/deep-learning-course3-week1-programming-assignment1/</guid>
      <description>Convolutional Neural Networks: Step by Step Welcome to Course 4&amp;rsquo;s first assignment! In this assignment, you will implement convolutional (CONV) and pooling (POOL) layers in numpy, including both forward propagation and (optionally) backward propagation.
Notation: - Superscript $[l]$ denotes an object of the $l^{th}$ layer. - Example: $a^{[4]}$ is the $4^{th}$ layer activation. $W^{[5]}$ and $b^{[5]}$ are the $5^{th}$ layer parameters.
 Superscript $(i)$ denotes an object from the $i^{th}$ example.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Jinwang Blog</title>
    <link>https://tfprimewj.github.io/categories/java/</link>
    <description>Recent content in Java on Jinwang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Jan 2020 23:36:14 +0800</lastBuildDate>
    
	<atom:link href="https://tfprimewj.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Thinking In Java Ch2 Introduction to Objects</title>
      <link>https://tfprimewj.github.io/2020/01/05/thinking-in-java-ch2-introduction-to-objects/</link>
      <pubDate>Sun, 05 Jan 2020 23:36:14 +0800</pubDate>
      
      <guid>https://tfprimewj.github.io/2020/01/05/thinking-in-java-ch2-introduction-to-objects/</guid>
      <description>Thinking In Java Ch2 Introduction to Objects Alan Kay总结了Java的五个基本特点
 Everything is an object.Think of an object as a fancy variable; it stores data, but you can “make requests” to that object, asking it to perform operations on itself. In theory, you can take any conceptual component in the problem you’re trying to solve (dogs, buildings, services, etc.) and represent it as an object in your program.
 A program is a buch of objects telling each other what to do by sending messages.</description>
    </item>
    
    <item>
      <title>Java学习之一维数组</title>
      <link>https://tfprimewj.github.io/2019/12/30/java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/</link>
      <pubDate>Mon, 30 Dec 2019 23:57:22 +0800</pubDate>
      
      <guid>https://tfprimewj.github.io/2019/12/30/java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/</guid>
      <description>Java学习之一维数组(Single-Dimentional Arrays) 数组基础 声明数组 声明数组必须有数组元素(element type)的类型和引用变量(reference variable)，通常也就是数组的名字
elementType[] arrayRefVar;  比如：
double[] myList;  创建数组 实际上，当我们输入elementType[] arrayRefVar;时，我们仅仅是创建了一个指向数组的引用变量，程序仅仅为这个引用分配了内存，但是并没有给数组分配内存。所以我们必须像下面一样操作才可以为数组分配内存。
arrayRefVar = new elementType[arraySize];  上面这句话做了两件事：
 创建了一个大小为arraySize的elementType类型数组，并为其分配了内存。
 创建了一个数组引用arrayRefVar，指向了刚刚创建的数组。
  例如：
double[] myList = new double[10];  可以通过下面的方法给数组赋值：
myList[0] = 2.5;  数组大小和默认值 数组的大小必须在创建数组的时候确定，而且不能更改。
可以使用myList.length查看数组的大小。
默认情况下，数组的值为
数值型：0 字符型：\u0000 布尔变量：false</description>
    </item>
    
  </channel>
</rss>